/*
 * This source file was generated by the Gradle 'init' task
 */
package com.xingpeds.kross

import com.xingpeds.kross.parser.Executor
import com.xingpeds.kross.parser.Lexer
import com.xingpeds.kross.parser.Parser
import kotlinx.coroutines.runBlocking

fun main() = runBlocking {
    generateSequence {
        print("input ")
        readLine()
    }.filterNotNull()
        .filter { it.isNotBlank() }
        .takeWhile { it != "exit" }
        .forEach {

            try {

                val lexer = Lexer(it)
                val parser = Parser()
                val ast = parser.parse(lexer.tokens())
                val executor = Executor()
                executor.execute(ast, env = System.getenv())
            } catch (e: Exception) {
                println("failed to run command: ${e.message}")
            }
        }
}
